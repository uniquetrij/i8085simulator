package me.uniquetrij.i8085.giu;

import me.uniquetrij.i8085.Data;
import me.uniquetrij.i8085.DataEx;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.WindowConstants;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Uniquetrij
 */
@SuppressWarnings("serial")
public class ValueEditor extends JDialog
{

    private String title;
    private int value;
    private ValueEditor.EditPanel editPanel;
    private Editable owner;
    private boolean ex;

    public ValueEditor(String title,int value,boolean ex,Editable owner)
    {
        this.value=value;
        this.title="Edit - "+title;
        this.ex=ex;
        this.owner=owner;
        initComponents();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents()
    {
        editPanel=new ValueEditor.EditPanel();
        javax.swing.GroupLayout layout=new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(editPanel,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(0,Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(editPanel,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));

        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),"close");
        getRootPane().getActionMap().put("close",new AbstractAction()
        {

            @Override
            public void actionPerformed(ActionEvent e)
            {
                dispose();
            }
        });
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),"ok");
        getRootPane().getActionMap().put("ok",new AbstractAction()
        {

            @Override
            public void actionPerformed(ActionEvent e)
            {
                editPanel.fieldFocusLost();
                editPanel.okActionPerformed(e);
            }
        });

        setTitle(title);
        setResizable(false);
        pack();
        setLocationRelativeTo((Component)owner);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        //setAlwaysOnTop(true);
        setModal(true);
        setVisible(true);


        //setLocationRelativeTo(caller);
    }// </editor-fold>
    /*
     * To change this template, choose Tools | Templates
     * and open the template in the editor.
     */

    /**
     *
     * @author Uniquetrij
     */
    @SuppressWarnings("serial")
    private class EditPanel extends javax.swing.JPanel
    {

        /**
         * Creates new form EditPanel
         */
        private javax.swing.JButton ok;
        private javax.swing.JButton apply;
        private javax.swing.JRadioButton bin;
        private javax.swing.JButton cancel;
        private javax.swing.JRadioButton dec;
        private javax.swing.JRadioButton hex;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JRadioButton oct;
        private javax.swing.JButton reset;
        private javax.swing.JTextField fieldValue;
        private int base;

        public EditPanel()
        {
            initComponents();
        }

        /**
         * This method is called from within the constructor to
         * initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">
        private void initComponents()
        {

            hex=new javax.swing.JRadioButton();
            dec=new javax.swing.JRadioButton();
            oct=new javax.swing.JRadioButton();
            bin=new javax.swing.JRadioButton();
            fieldValue=new javax.swing.JTextField();
            jLabel1=new javax.swing.JLabel();
            apply=new javax.swing.JButton();
            cancel=new javax.swing.JButton();
            reset=new javax.swing.JButton();
            ok=new javax.swing.JButton();

            base=16;

            hex.setFont(new java.awt.Font("Tahoma",0,13)); // NOI18N
            hex.setSelected(true);
            hex.setText("Hex");
            hex.setToolTipText("Hexadecimal representation");
            hex.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            hex.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    hexActionPerformed(evt);
                }
            });

            dec.setFont(new java.awt.Font("Tahoma",0,13)); // NOI18N
            dec.setText("Dec");
            dec.setToolTipText("Decimal representation");
            dec.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            dec.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    decActionPerformed(evt);
                }
            });

            oct.setFont(new java.awt.Font("Tahoma",0,13)); // NOI18N
            oct.setText("Oct");
            oct.setToolTipText("Octal representation");
            oct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            oct.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    octActionPerformed(evt);
                }
            });

            bin.setFont(new java.awt.Font("Tahoma",0,13)); // NOI18N
            bin.setText("Bin");
            bin.setToolTipText("Binary representation");
            bin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            bin.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    binActionPerformed(evt);
                }
            });

            fieldValue.setFont(new java.awt.Font("Tahoma",0,14)); // NOI18N
            fieldValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            fieldValue.setText(Integer.toHexString(value).toUpperCase());
            fieldValue.selectAll();
            fieldValue.addKeyListener(new KeyAdapter()
            {

                @Override
                public void keyTyped(KeyEvent e)
                {
                    switch(e.getKeyChar())
                    {
                        case '0':
                        case '1':
                            if(base==2)
                                return;
                        case '2':
                        case '3':
                        case '4':
                        case '5':
                        case '6':
                        case '7':
                            if(base==8)
                                return;
                        case '8':
                        case '9':
                            if(base==10)
                                return;
                        case 'A':
                        case 'a':
                        case 'B':
                        case 'b':
                        case 'C':
                        case 'c':
                        case 'D':
                        case 'd':
                        case 'E':
                        case 'e':
                        case 'F':
                        case 'f':
                            if(base==16)
                                return;
                        default:
                            getToolkit().beep();
                            e.consume();
                    }
                }
            });
            fieldValue.addFocusListener(new java.awt.event.FocusAdapter()
            {

                public void focusLost(java.awt.event.FocusEvent evt)
                {
                    fieldFocusLost();
                }
            });

            jLabel1.setFont(new java.awt.Font("Tahoma",0,13)); // NOI18N
            jLabel1.setText("Value:");

            apply.setText("Apply");
            apply.setToolTipText("Set value to this cell");
            apply.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    applyActionPerformed(evt);
                }
            });

            cancel.setText("Cancel");
            cancel.setToolTipText("Abort edit dialog");
            cancel.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    cancelActionPerformed(evt);
                }
            });

            reset.setText("Reset");
            reset.setToolTipText("Reset value of this cell to ZERO");
            reset.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    resetActionPerformed(evt);
                }
            });

            ok.setText("Ok");
            ok.setToolTipText("Set value to this cell and close edit dialog");
            ok.addActionListener(new java.awt.event.ActionListener()
            {

                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    okActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout=new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,false).addGroup(layout.createSequentialGroup().addComponent(apply,javax.swing.GroupLayout.PREFERRED_SIZE,59,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(ok,javax.swing.GroupLayout.PREFERRED_SIZE,57,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(cancel,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addComponent(jLabel1).addGap(8,8,8).addComponent(fieldValue,javax.swing.GroupLayout.PREFERRED_SIZE,82,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(reset)).addGroup(layout.createSequentialGroup().addComponent(hex).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(dec).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(oct).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(bin))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));

            layout.linkSize(javax.swing.SwingConstants.HORIZONTAL,new java.awt.Component[]
                    {
                        bin,dec,hex,oct
                    });

            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(7,7,7).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(fieldValue,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(reset)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(dec).addComponent(oct).addComponent(bin).addComponent(hex)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(apply).addComponent(cancel).addComponent(ok)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));

            layout.linkSize(javax.swing.SwingConstants.VERTICAL,new java.awt.Component[]
                    {
                        bin,dec,hex,oct
                    });


        }// </editor-fold>

        private void hexActionPerformed(java.awt.event.ActionEvent evt)
        {
            fieldValue.setText(Integer.toString(Integer.parseInt(fieldValue.getText(),base),base=16).toUpperCase());
            hex.setSelected(true);
            dec.setSelected(false);
            oct.setSelected(false);
            bin.setSelected(false);

        }

        private void decActionPerformed(java.awt.event.ActionEvent evt)
        {
            fieldValue.setText(Integer.toString(Integer.parseInt(fieldValue.getText(),base),base=10));
            hex.setSelected(false);
            dec.setSelected(true);
            oct.setSelected(false);
            bin.setSelected(false);
        }

        private void octActionPerformed(java.awt.event.ActionEvent evt)
        {
            fieldValue.setText(Integer.toString(Integer.parseInt(fieldValue.getText(),base),base=8));
            hex.setSelected(false);
            dec.setSelected(false);
            oct.setSelected(true);
            bin.setSelected(false);
        }

        private void binActionPerformed(java.awt.event.ActionEvent evt)
        {
            fieldValue.setText(Integer.toString(Integer.parseInt(fieldValue.getText(),base),base=2));
            hex.setSelected(false);
            dec.setSelected(false);
            oct.setSelected(false);
            bin.setSelected(true);
        }

        private void resetActionPerformed(java.awt.event.ActionEvent evt)
        {
            hex.setSelected(true);
            dec.setSelected(false);
            oct.setSelected(false);
            bin.setSelected(false);
            fieldValue.setText("0");
            value=0;
            okActionPerformed(evt);
        }

        private boolean applyActionPerformed(java.awt.event.ActionEvent evt)
        {
            try
            {
                if(!ex)
                {
                    Data d=new Data(value);
                    owner.setValue(d);
                }
                else
                {
                    DataEx d=new DataEx(value);
                    owner.setValue(d);
                }
                return true;
            }
            catch(NumberFormatException e)
            {
                int k=ex?DataEx.MAX_VALUE:Data.MAX_VALUE;
                String message="Enter data in range:"
                        +"\nHex : 0 - "+Integer.toHexString(k)
                        +"\nDec : 0 - "+Integer.toString(k)
                        +"\nOct : 0 - "+Integer.toOctalString(k)
                        +"\nBin : 0 - "+Integer.toBinaryString(k);
                JOptionPane.showConfirmDialog(this,message,"Number Too Large",JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        public void okActionPerformed(java.awt.event.ActionEvent evt)
        {
            if(applyActionPerformed(evt))
                dispose();
        }

        private void cancelActionPerformed(java.awt.event.ActionEvent evt)
        {
            dispose();
        }

        private void fieldFocusLost()
        {
            if(fieldValue.getText().length()==0)
                fieldValue.setText("0");
            value=Integer.parseInt(fieldValue.getText(),base);
        }
    }

    public static void main(String args[])
    {
        try
        {
            for(javax.swing.UIManager.LookAndFeelInfo info:javax.swing.UIManager.getInstalledLookAndFeels())
                if("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
        }
        catch(ClassNotFoundException|InstantiationException|IllegalAccessException|javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ValueEditor.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable()
        {

            @Override
            public void run()
            {
                new ValueEditor("Test Value Edit",0xAA,false,null);
            }
        });
    }
}
